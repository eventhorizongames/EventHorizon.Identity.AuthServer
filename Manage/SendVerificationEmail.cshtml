@page
@model IndexModel;

@using MediatR;
@using Microsoft.AspNetCore.Identity;
@using EventHorizon.Identity.AuthServer.Models;
@using EventHorizon.Identity.AuthServer.Services;
@using EventHorizon.Identity.AuthServer.Email.Send;

@functions {
    public class IndexModel : PageModel {
        readonly IMediator _mediator;
        readonly UserManager<ApplicationUser> _userManager;
        readonly IEmailSender _emailSender;

        public IndexModel(
            IMediator mediator,
            UserManager<ApplicationUser> userManager,
            IEmailSender emailSender
        ) {
            _mediator = mediator;
            _userManager = userManager; 
            _emailSender = emailSender;  
        }

        [TempData]
        public string StatusMessage { get; set; }
        
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> OnPost() 
        {
            if (!ModelState.IsValid)
            {
                return RedirectToPage(
                    "./Index"
                );
            }

            var user = await _userManager.GetUserAsync(
                User
            );
            if (user == null)
            {
                throw new ApplicationException(
                    $"Unable to load user with ID '{_userManager.GetUserId(User)}'."
                );
            }

            var code = await _userManager.GenerateEmailConfirmationTokenAsync(
                user
            );
            await _mediator.Send(
                new SendConfirmationEmail(
                    user.Email,
                    Url.EmailConfirmationLink(
                        user.Id, 
                        code, 
                        Request.Scheme
                    )
                )
            );

            StatusMessage = "Verification email sent. Please check your email.";
            return RedirectToPage(
                "./Index"
            );
        }
    }
}

<h2>Verification email sent. Please check your email.</h2>