@page
@model IndexModel;

@using MediatR;
@using IdentityServer4.Stores;
@using EventHorizon.Identity.AuthServer.Identity;
@using EventHorizon.Identity.AuthServer.Consent.Models;
@using EventHorizon.Identity.AuthServer.Consent.Processing;
@using EventHorizon.Identity.AuthServer.Consent.Build;

@functions {
    [SecurityHeaders]
    public class IndexModel
        : PageModel
    {
        private readonly IMediator _mediator;
        private readonly IClientStore _clientStore;

        public IndexModel(
            IMediator mediator,
            IClientStore clientStore
        )
        {
            _mediator = mediator;
            _clientStore = clientStore;
        }

        public string ClientName { get; private set; }
        public string ClientUrl { get; private set; }
        public string ClientLogoUrl { get; private set; }
        public bool AllowRememberConsent { get; private set; }

        public IEnumerable<ScopeViewModel> IdentityScopes { get; private set; }
        public IEnumerable<ScopeViewModel> ResourceScopes { get; private set; }

        public string Button { get; private set; }
        public IEnumerable<string> ScopesConsented { get; private set; }
        public string Description { get; private set; }
        public bool RememberConsent { get; private set; }
        public string ReturnUrl { get; private set; }


        public async Task<IActionResult> OnGet(
            string returnUrl
        )
        {
            var response = await _mediator.Send(
                new BuildConsentViewModel(
                    returnUrl
                )
            );
            if (response != null)
            {
                MergeIntoPage(
                    response
                );
                return Page();
            }
            return RedirectToPage(
                "/Error/Index"
            );
        }

        public async Task<IActionResult> OnPost(
            ConsentInputModel model
        )
        {
            var result = await _mediator.Send(
                new ProcessPageConsentRequest(
                    model,
                    User
                )
            );

            if (result.IsRedirect)
            {
                return Redirect(
                    result.RedirectUri
                );
            }

            if (result.HasValidationError)
            {
                ModelState.AddModelError(
                    "", result.ValidationError
                );
            }

            if (result.ShowView)
            {
                MergeIntoPage(
                    result.ViewModel
                );
                return Page();
            }

            return RedirectToPage(
                "/Error/Index"
            );
        }

        public void MergeIntoPage(
            ConsentViewModel viewModel
        )
        {
            ClientName = viewModel.ClientName;
            ClientUrl = viewModel.ClientUrl;
            ClientLogoUrl = viewModel.ClientLogoUrl;
            AllowRememberConsent = viewModel.AllowRememberConsent;
            IdentityScopes = viewModel.IdentityScopes;
            ResourceScopes = viewModel.ResourceScopes;
            Button = viewModel.Button;
            ScopesConsented = viewModel.ScopesConsented;
            Description = viewModel.Description;
            RememberConsent = viewModel.RememberConsent;
            ReturnUrl = viewModel.ReturnUrl;
        }
    }
}

<div class="page-consent">
    <div class="row page-header">
        <div class="col-sm-10">
            @if (Model.ClientLogoUrl != null)
            {
                <div class="client-logo"><img src="@Model.ClientLogoUrl"></div>
            }
            <h1 id="page-title" class="page-title">
                @Model.ClientName
                <small>is requesting your permission</small>
            </h1>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-8">
            @await Html.PartialAsync("_ValidationSummary")

            <form asp-page="./Index" method="POST" class="consent-form">
                <input type="hidden" asp-for="ReturnUrl" />

                <div class="consent-page-description" data-selector="description">Uncheck the permissions you do not wish to grant.</div>

                @if (Model.IdentityScopes.Any())
                {
                    <div class="panel panel-default consent-buttons personal-info">
                        <div class="panel-heading" data-selector="personal-info-heading">
                            <span class="glyphicon glyphicon-user"></span>
                            Personal Information
                        </div>
                        <ul class="list-group" data-selector="personal-info-scopes">
                            @foreach (var scope in Model.IdentityScopes)
                            {
                                @await Html.PartialAsync("_ScopeListItem", scope)
                            }
                        </ul>
                    </div>
                }

                @if (Model.ResourceScopes.Any())
                {
                    <div class="panel panel-default application-access">
                        <div class="panel-heading" data-selector="application-access-heading">
                            <span class="glyphicon glyphicon-tasks"></span>
                            Application Access
                        </div>
                        <ul class="list-group" data-selector="application-access-scopes">
                            @foreach (var scope in Model.ResourceScopes)
                            {
                                @await Html.PartialAsync("_ScopeListItem", scope)
                            }
                        </ul>
                    </div>
                }

                <div class="form-group">
                    <div class="card">
                        <div class="card-header" data-selector="access-description-label">
                            <span class="glyphicon glyphicon-tasks"></span>
                            Description
                        </div>
                        <div class="card-body">
                            <input class="form-control" placeholder="Description or name of device" asp-for="Description" autofocus data-selector="access-description">
                        </div>
                    </div>
                </div>

                @if (Model.AllowRememberConsent)
                {
                    <div class="consent-remember">
                        <label data-selector="remember-decision-label">
                            <input class="consent-scopecheck" asp-for="RememberConsent" data-selector="remember-decision" />
                            <strong>Remember My Decision</strong>
                        </label>
                    </div>
                }

                <div class="consent-buttons">
                    <button id="yes" name="button" value="yes" class="btn btn-primary" autofocus>Yes, Allow</button>
                    <button id="no" name="button" value="no" class="btn">No, Do Not Allow</button>
                    @if (Model.ClientUrl != null)
                    {
                        <a id="client-url" class="pull-right btn btn-default" target="_blank" href="@Model.ClientUrl">
                            <span class="glyphicon glyphicon-info-sign"></span>
                            <strong>@Model.ClientName</strong>
                        </a>
                    }
                </div>
            </form>
        </div>
    </div>
</div>